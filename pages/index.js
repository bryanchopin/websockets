

// import Head from "next/head";
// import styles from "@/styles/Home.module.css";
// import SocketIOClient from "socket.io-client";
// import { useState, useEffect } from "react";

// export default function Home() {
//   const [value, setValue] = useState(0);
//   let socket; // Declarar la variable socket aquí

//   useEffect(() => {
//     // connect to socket server
//     socket = SocketIOClient.connect(process.env.BASE_URL, {
//       path: "/api/socket",
//     });

//     // log socket connection
//     // socket.on("connect", () => {
//     //   console.log("SOCKET CONNECTED!", socket.id);
//     //   // setConnected(true);
//     // });

//     socket.on('welcome', (message) => {
//       console.log(message);
//     });

//     socket.on("changeValue", (newValue) => {
//       setValue(newValue);
//       console.log(`Valor actualizado a: ${newValue}`);
//     });

//     socket.on("updateValue", (newValue) => {
//       setValue(newValue);
//       console.log(`Valor actualizado a: ${newValue}`);
//     });

//     socket.on("disconnect", () => {
//       console.log("Cliente WebSocket desconectado");
//     });

//     // socket disconnet onUnmount if exists
//     if (socket) return () => socket.disconnect();
//   }, []);

//   // Función para enviar un nuevo valor al servidor
//   function handleChangeValue(newValue) {
//     socket.emit("changeValue", newValue); // Debes usar socket.emit, no socket.on
//   }

//   return (
//     <>
//       <Head>
//         <title>Create Next App</title>
//         <meta name="description" content="Generated by create next app" />
//         <meta name="viewport" content="width=device-width, initial-scale=1" />
//         <link rel="icon" href="/favicon.ico" />
//       </Head>
//       <h1 style={{ color: "white" }}>Valor compartido: {value}</h1>
//       <button onClick={() => handleChangeValue(prompt("agrega el valor"))}>
//         Actualizar Valor
//       </button>
//     </>
//   );
// }


// import Head from "next/head";
// import styles from "@/styles/Home.module.css";
// import SocketIOClient from "socket.io-client";
// import { useState, useEffect } from "react";

// export default function Home() {
//   const [value, setValue] = useState(0);
//   let socket; // Declarar la variable socket aquí

//   useEffect(() => {
//     // Conectarse al servidor WebSocket
//     socket = SocketIOClient.connect(process.env.BASE_URL, {
//       path: "/api/socket",
//     });

//     socket.on('welcome', (message) => {
//       console.log(message);
//     });

//     socket.on("changeValue", (newValue) => {
//       setValue(newValue);
//       console.log(`Valor actualizado a: ${newValue}`);
//     });

//     socket.on("updateValue", (newValue) => {
//       setValue(newValue);
//       console.log(`Valor actualizado a: ${newValue}`);
//     });

//     socket.on("disconnect", () => {
//       console.log("Cliente WebSocket desconectado");
//       socket = null; // Establecer socket como null cuando se desconecta
//     });

//     // Desconectar el socket al desmontar si existe
//     if (socket) return () => socket.disconnect();
//   }, []);

//   // Función para enviar un nuevo valor al servidor
//   function handleChangeValue(newValue) {
//     if (socket) {
//       socket.emit("changeValue", newValue); // Usar socket.emit para enviar el valor al servidor
//     } else {
//       console.error("Socket no está definido");
//     }
//   }


//   return (
//     <>
//       <Head>
//         <title>Create Next App</title>
//         <meta name="description" content="Generated by create next app" />
//         <meta name="viewport" content="width=device-width, initial-scale=1" />
//         <link rel="icon" href="/favicon.ico" />
//       </Head>
//       <h1 style={{ color: "white" }}>Valor compartido: {value}</h1>
//       <button onClick={() => handleChangeValue(prompt("Agrega el valor"))}>
//         Actualizar Valor
//       </button>
//     </>
//   );
// }


import Head from "next/head";
import styles from "@/styles/Home.module.css";
import SocketIOClient from "socket.io-client";
import { useState, useEffect } from "react";

export default function Home() {
  const [value, setValue] = useState(0);
  const [socket, setSocket] = useState(null); // Estado para gestionar el socket

  useEffect(() => {
    // connect to socket server
    const newSocket = SocketIOClient.connect(process.env.BASE_URL, {
      path: "/api/socket",
    });

    newSocket.on("welcome", (message) => {
      console.log(message);
    });

    newSocket.on("changeValue", (newValue) => {
      setValue(newValue);
      console.log(`Valor actualizado a: ${newValue}`);
    });

    newSocket.on("updateValue", (newValue) => {
      setValue(newValue);
      console.log(`Valor actualizado a: ${newValue}`);
    });

    newSocket.on("disconnect", () => {
      console.log("Cliente WebSocket desconectado");
      setSocket(null); // Establecer el socket en null cuando se desconecta
    });

    // Almacenar el socket en el estado
    setSocket(newSocket);

    // socket disconnet onUnmount if exists
    if (newSocket) return () => newSocket.disconnect();
  }, []);

  // Función para enviar un nuevo valor al servidor
  function handleChangeValue(newValue) {
    if (socket) {
      socket.emit("changeValue", newValue); // Usar socket.emit para enviar el valor al servidor
    } else {
      console.error("Socket no está definido");
    }
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1 style={{ color: "white" }}>Valor compartido: {value}</h1>
      <button onClick={() => handleChangeValue(prompt("Agrega el valor"))}>
        Actualizar Valor
      </button>
    </>
  );
}
