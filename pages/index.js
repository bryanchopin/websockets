// 

import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import io from 'socket.io-client'
import { useState, useEffect } from 'react'

let socket;

export default function Home() {
  const [value, setValue] = useState(0);

  useEffect(() => {
    socketInit();
  }, [])

  // async function socketInit() {
  //   await fetch('/api/socket');
  //   socket = io();

  //   socket.on('welcome', (message) => {
  //     console.log(message);
  //   });

  //   socket.on('updateValue', (newValue) => {
  //     setValue(newValue);
  //     console.log(`Valor actualizado a: ${newValue}`);
  //   });

  //   socket.on('disconnect', () => {
  //     console.log('Cliente WebSocket desconectado');
  //   });
  // }

  async function socketInit() {
    await fetch('/api/socket');
    socket = io();

    // Aumenta el límite de oyentes
    // socket.setMaxListeners(20);

    socket.on('welcome', (message) => {
      console.log(message);
    });

    socket.on('updateValue', (newValue) => {
      setValue(newValue);
      console.log(`Valor actualizado a: ${newValue}`);
    });

    socket.on('disconnect', () => {
      console.log('Cliente WebSocket desconectado');
    });
  }


  // Función para enviar un nuevo valor al servidor
  function handleChangeValue(newValue) {
    socket.emit('changeValue', newValue);
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1 style={{ color: "white" }}>Valor compartido: {value}</h1>
      <button onClick={() => handleChangeValue(prompt("agrega el valor"))}>Actualizar Valor</button>
    </>
  )
}
